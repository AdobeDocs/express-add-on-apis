"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[2995],{25801:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return x}});var a=n(87462),m=n(63366),d=(n(15007),n(64983)),i=n(91515),r=["components"],l={},p={_frontmatter:l},o=i.Z;function x(e){var t=e.components,n=(0,m.Z)(e,r);return(0,d.mdx)(o,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,d.mdx)("p",null,(0,d.mdx)("a",{parentName:"p",href:"../overview.md"}," /authoring-api")," / ItemList"),(0,d.mdx)("h1",{id:"class-itemlistt"},"Class: ItemList<T",">"),(0,d.mdx)("p",null,'ItemList represents an ordered list of high-level API wrapper objects, representing entities that are all children of the\nsame parent node. All children are of the same "flavor" (ChildOf component ID), i.e. this represents a view onto a\nsingle ChildrenQuery\'s result list. (Note some node types may use an ItemList subclass to present a ',(0,d.mdx)("em",{parentName:"p"},"filtered")," view of\nthe overall query result list, however)."),(0,d.mdx)("p",null,"ItemList also provides APIs for manipulating the list by adding items to the parent or removing items from the parent."),(0,d.mdx)("h2",{id:"type-parameters"},"Type parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Name"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Type"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"extends ",(0,d.mdx)("inlineCode",{parentName:"td"},"ListItem"))))),(0,d.mdx)("h2",{id:"table-of-contents"},"Table of contents"),(0,d.mdx)("h3",{id:"constructors"},"Constructors"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#constructor"},"constructor"))),(0,d.mdx)("h3",{id:"accessors"},"Accessors"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#first"},"first")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#last"},"last")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#length"},"length"))),(0,d.mdx)("h3",{id:"methods"},"Methods"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#%5Biterator%5D"},"[iterator]")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#append"},"append")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#clear"},"clear")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#insertAfter"},"insertAfter")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#insertBefore"},"insertBefore")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#item"},"item")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#remove"},"remove")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#replace"},"replace")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"ItemList.md#toArray"},"toArray"))),(0,d.mdx)("h2",{id:"constructors-1"},"Constructors"),(0,d.mdx)("h3",{id:"a-idconstructor-nameconstructora-constructor"},(0,d.mdx)("a",{id:"constructor",name:"constructor"})," constructor"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("strong",{parentName:"p"},"new ItemList"),"<",(0,d.mdx)("inlineCode",{parentName:"p"},"T"),">","(",(0,d.mdx)("inlineCode",{parentName:"p"},"_parentEntity"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"_childrenUtils"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"_toWrapper"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"_hasFixedParent"),")"),(0,d.mdx)("h4",{id:"type-parameters-1"},"Type parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Name"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Type"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"extends ",(0,d.mdx)("inlineCode",{parentName:"td"},"ListItem"))))),(0,d.mdx)("h4",{id:"parameters"},"Parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Name"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Type"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"_parentEntity")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"string")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Parent node whose children this ItemList presents a live, mutable view of.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"_childrenUtils")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"ChildrenUtils")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"ChildrenUtils for the flavor of child list (which ChildOf component) this list represents.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"_toWrapper")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"(",(0,d.mdx)("inlineCode",{parentName:"td"},"entity"),": ",(0,d.mdx)("inlineCode",{parentName:"td"},"string"),") => ",(0,d.mdx)("inlineCode",{parentName:"td"},"T")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Converts a child entity in this list to a public API wrapper object of the appropriate type (some                     subclass of type T).")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"_hasFixedParent")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"(",(0,d.mdx)("inlineCode",{parentName:"td"},"item"),": ",(0,d.mdx)("inlineCode",{parentName:"td"},"T"),") => ",(0,d.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Returns false if the given item cannot be reparented.")))),(0,d.mdx)("h4",{id:"defined-in"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:44"),(0,d.mdx)("h2",{id:"accessors-1"},"Accessors"),(0,d.mdx)("h3",{id:"a-idfirst-namefirsta-first"},(0,d.mdx)("a",{id:"first",name:"first"})," first"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,d.mdx)("strong",{parentName:"p"},"first"),"(): ",(0,d.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,d.mdx)("inlineCode",{parentName:"p"},"T")),(0,d.mdx)("p",null,"First item in this list, or undefined if list is empty."),(0,d.mdx)("h4",{id:"returns"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,d.mdx)("inlineCode",{parentName:"p"},"T")),(0,d.mdx)("h4",{id:"defined-in-1"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:61"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-idlast-namelasta-last"},(0,d.mdx)("a",{id:"last",name:"last"})," last"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,d.mdx)("strong",{parentName:"p"},"last"),"(): ",(0,d.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,d.mdx)("inlineCode",{parentName:"p"},"T")),(0,d.mdx)("p",null,"Last item in this list, or undefined if list is empty."),(0,d.mdx)("h4",{id:"returns-1"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,d.mdx)("inlineCode",{parentName:"p"},"T")),(0,d.mdx)("h4",{id:"defined-in-2"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:69"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-idlength-namelengtha-length"},(0,d.mdx)("a",{id:"length",name:"length"})," length"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,d.mdx)("strong",{parentName:"p"},"length"),"(): ",(0,d.mdx)("inlineCode",{parentName:"p"},"number")),(0,d.mdx)("p",null,"Number of items in this list."),(0,d.mdx)("h4",{id:"returns-2"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"number")),(0,d.mdx)("h4",{id:"defined-in-3"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:54"),(0,d.mdx)("h2",{id:"methods-1"},"Methods"),(0,d.mdx)("h3",{id:"a-iditerator-nameiteratora-iterator"},(0,d.mdx)("a",{id:"[iterator]",name:"[iterator]"})," ","[iterator]"),(0,d.mdx)("p",null,"▸ ",(0,d.mdx)("strong",{parentName:"p"},"[iterator]"),"(): ",(0,d.mdx)("inlineCode",{parentName:"p"},"Iterator"),"<",(0,d.mdx)("inlineCode",{parentName:"p"},"T"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"any"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"undefined"),">"),(0,d.mdx)("p",null,"Iterates over all the items in this list. Mutations that occur mid-iteration are not reflected by the iterator."),(0,d.mdx)("h4",{id:"returns-3"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"Iterator"),"<",(0,d.mdx)("inlineCode",{parentName:"p"},"T"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"any"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"undefined"),">"),(0,d.mdx)("h4",{id:"defined-in-4"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:230"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-idappend-nameappenda-append"},(0,d.mdx)("a",{id:"append",name:"append"})," append"),(0,d.mdx)("p",null,"▸ ",(0,d.mdx)("strong",{parentName:"p"},"append"),"(...",(0,d.mdx)("inlineCode",{parentName:"p"},"items"),"): ",(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("p",null,"Add one or more items to the end of the list. The last argument will become the last item in this list. Items are\nremoved from their previous parent, if any – or if an item is already in ",(0,d.mdx)("em",{parentName:"p"},"this")," list, its index is simply changed."),(0,d.mdx)("h4",{id:"parameters-1"},"Parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Name"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Type"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"...items")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T"),"[]")))),(0,d.mdx)("h4",{id:"returns-4"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("h4",{id:"defined-in-5"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:90"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-idclear-namecleara-clear"},(0,d.mdx)("a",{id:"clear",name:"clear"})," clear"),(0,d.mdx)("p",null,"▸ ",(0,d.mdx)("strong",{parentName:"p"},"clear"),"(): ",(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("p",null,"Remove all items from this list. No-op if list is already empty."),(0,d.mdx)("h4",{id:"returns-5"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("h4",{id:"defined-in-6"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:145"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-idinsertafter-nameinsertaftera-insertafter"},(0,d.mdx)("a",{id:"insertAfter",name:"insertAfter"})," insertAfter"),(0,d.mdx)("p",null,"▸ ",(0,d.mdx)("strong",{parentName:"p"},"insertAfter"),"(",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"after"),"): ",(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("p",null,"Insert ",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem")," so it is immediately after ",(0,d.mdx)("inlineCode",{parentName:"p"},"after")," in this list: places ",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem")," at the index one higher than ",(0,d.mdx)("inlineCode",{parentName:"p"},"after"),",\nshifting all later items to higher indices (the index of ",(0,d.mdx)("inlineCode",{parentName:"p"},"after")," remains unchanged). ",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem")," is removed from its previous parent,\nif any – or if it's already in ",(0,d.mdx)("em",{parentName:"p"},"this")," list, its index is simply changed. No-op if both arguments are the same item."),(0,d.mdx)("h4",{id:"parameters-2"},"Parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Name"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Type"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"newItem")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T"))),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"after")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T"))))),(0,d.mdx)("h4",{id:"returns-6"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("h4",{id:"defined-in-7"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:195"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-idinsertbefore-nameinsertbeforea-insertbefore"},(0,d.mdx)("a",{id:"insertBefore",name:"insertBefore"})," insertBefore"),(0,d.mdx)("p",null,"▸ ",(0,d.mdx)("strong",{parentName:"p"},"insertBefore"),"(",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"before"),"): ",(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("p",null,"Insert ",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem")," so it is immediately before ",(0,d.mdx)("inlineCode",{parentName:"p"},"before")," in this list: places ",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem")," at the index that ",(0,d.mdx)("inlineCode",{parentName:"p"},"before")," used\nto occupy, shifting ",(0,d.mdx)("inlineCode",{parentName:"p"},"before")," and all later items to higher indices. ",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem")," is removed from its previous parent,\nif any – or if it's already in ",(0,d.mdx)("em",{parentName:"p"},"this")," list, its index is simply changed. No-op if both arguments are the same item."),(0,d.mdx)("h4",{id:"parameters-3"},"Parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Name"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Type"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"newItem")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T"))),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"before")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T"))))),(0,d.mdx)("h4",{id:"returns-7"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("h4",{id:"defined-in-8"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:186"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-iditem-nameitema-item"},(0,d.mdx)("a",{id:"item",name:"item"})," item"),(0,d.mdx)("p",null,"▸ ",(0,d.mdx)("strong",{parentName:"p"},"item"),"(",(0,d.mdx)("inlineCode",{parentName:"p"},"index"),"): ",(0,d.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,d.mdx)("inlineCode",{parentName:"p"},"T")),(0,d.mdx)("p",null,'Returns item at the given index, or undefined if index is out of range. The index is relative only to items within this\nlist - if a node holds children in other "slots" as well they are not part of the index numbering here.'),(0,d.mdx)("h4",{id:"parameters-4"},"Parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Name"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Type"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"index")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"number")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Zero-based index")))),(0,d.mdx)("h4",{id:"returns-8"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,d.mdx)("inlineCode",{parentName:"p"},"T")),(0,d.mdx)("h4",{id:"defined-in-9"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:80"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-idremove-nameremovea-remove"},(0,d.mdx)("a",{id:"remove",name:"remove"})," remove"),(0,d.mdx)("p",null,"▸ ",(0,d.mdx)("strong",{parentName:"p"},"remove"),"(...",(0,d.mdx)("inlineCode",{parentName:"p"},"items"),"): ",(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("p",null,"Remove one or more items from this list. The items need not be contiguous.\nThrows without performing any removals if any item is not a member of this list."),(0,d.mdx)("h4",{id:"parameters-5"},"Parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Name"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Type"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"...items")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T"),"[]")))),(0,d.mdx)("h4",{id:"returns-9"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("h4",{id:"defined-in-10"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:126"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-idreplace-namereplacea-replace"},(0,d.mdx)("a",{id:"replace",name:"replace"})," replace"),(0,d.mdx)("p",null,"▸ ",(0,d.mdx)("strong",{parentName:"p"},"replace"),"(",(0,d.mdx)("inlineCode",{parentName:"p"},"oldItem"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem"),"): ",(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("p",null,"Replace ",(0,d.mdx)("inlineCode",{parentName:"p"},"oldItem")," with ",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem")," in this list. Throws if ",(0,d.mdx)("inlineCode",{parentName:"p"},"oldItem")," is not a member of this list.\n",(0,d.mdx)("inlineCode",{parentName:"p"},"newItem")," is removed from its previous parent, if any – or if it's already in ",(0,d.mdx)("em",{parentName:"p"},"this")," list, its index is simply\nchanged. No-op if both arguments are the same item."),(0,d.mdx)("h4",{id:"parameters-6"},"Parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Name"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Type"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"oldItem")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T"))),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"newItem")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"T"))))),(0,d.mdx)("h4",{id:"returns-10"},"Returns"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"void")),(0,d.mdx)("h4",{id:"defined-in-11"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:157"),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"a-idtoarray-nametoarraya-toarray"},(0,d.mdx)("a",{id:"toArray",name:"toArray"})," toArray"),(0,d.mdx)("p",null,"▸ ",(0,d.mdx)("strong",{parentName:"p"},"toArray"),"(): readonly ",(0,d.mdx)("inlineCode",{parentName:"p"},"T"),"[]"),(0,d.mdx)("p",null,"All items in the list, as a static array. Mutations that occur later are not reflected in an array returned earlier."),(0,d.mdx)("h4",{id:"returns-11"},"Returns"),(0,d.mdx)("p",null,"readonly ",(0,d.mdx)("inlineCode",{parentName:"p"},"T"),"[]"),(0,d.mdx)("h4",{id:"defined-in-12"},"Defined in"),(0,d.mdx)("p",null,"platform/authoring/api/src/ItemList.ts:237"))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-classes-item-list-md-5a7e13d9c542b347071f.js.map